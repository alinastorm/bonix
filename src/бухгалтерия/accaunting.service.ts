import { Injectable } from '@nestjs/common';
import { Программа1сБухБониксАвто } from 'src/_commons/services/1сProgramm/бухBonixAvto.service';
import { Программа1сБухСнаб } from 'src/_commons/services/1сProgramm/бухСнабИнвест.service';
import { Программа1сУпр } from 'src/_commons/services/1сProgramm/upr.service';
import { ЭлектроннаяПочта } from '../_commons/services/email/email.service'
import { КлиентБанк } from '../_commons/services/КлиентБанк/bank1.service'
import { GoogleMapService } from 'src/_commons/services/web/googlemap.service';
import { Владимир } from "../Руководитель/Владимир.service"
const restartTimeSeconds = +process.env.TIME_RESTART_PERIODICTASKS_SECONDS ?? 10 * 1000

/** Бухгалтерия AccauntingDepartmentService */
@Injectable()
export class Бухгалтерия {
    private runTime = ''
    private регламентныеЗадания = [
        // { task: this.проверитьПочту, timeout: 100 }, //и тд
    ]
    constructor(
        private программа1сУпр: Программа1сУпр,
        private программа1сБухБониксАвто: Программа1сБухБониксАвто,
        private программа1сБухСнаб: Программа1сБухСнаб,
        private ЭлектроннаяПочта: ЭлектроннаяПочта,
        private клиентБанк: КлиентБанк,
        private googleMapService: GoogleMapService,
        private владимир: Владимир
    ) { this.запуститьРегламентныеЗадания() }

    /** Запуск запланированных задач runScheduledTasks*/
    private запуститьРегламентныеЗадания() {
        setInterval(() => {
            this.регламентныеЗадания.forEach(({ task, timeout }) => {
                if (new Date().toISOString() > this.runTime + timeout) {
                    task()
                }
            })
        }, restartTimeSeconds)
    }
    /** проверяет почту checkEmail*/
    protected получитьЭлектронноеПисьмоСПакетомДокументов() {
        //TODO что там внутри ? Кто что? Какие документы формат
        const пакетДокументов = this.ЭлектроннаяПочта.получитьЭлектронноеПисьмо()
        this.провестиПроцедуруПроверкиПакетаДокументов(пакетДокументов)
    }
    /** Проверить процедуру оценки пакета документов checkDocumentsForImportItems*/
    protected провестиПроцедуруПроверкиПакетаДокументов(пакетДокументов) {
        //TODO почему вэд не проверяет? каких документов
        const isPackValid = undefined
        if (isPackValid) this.проверитьКомплектацию()
    }
    /** проверить комплектацию checkPackage*/
    protected проверитьКомплектацию() {
        //TODO как проверяет?
        const isPackValid = undefined
        if (isPackValid) {
            this.подготовитьЭкономическоеОбоснование()
        }
    }
    /** подготовить экономическое обоснование */
    protected подготовитьЭкономическоеОбоснование() {

    }
    // /** оприходовать товар processReceiptGoods*/
    // protected оприходоватьТовар() {

    // }
    /**
     * разнесение выписки из клиент банка в 1с бух
     * выбирается файл из места куда скачали его из интернет банка
     * импортируется только byn валютные проводятся руками
     */
    protected импортироватьППВиППИДокументыИзКлиентБанкаВБух() {
        const excell = this.клиентБанк.выгрузитьФайлВыпискиБанка('byn')
        this.программа1сБухБониксАвто.импортБанковскойВыпискиByn(excell)
        this.программа1сБухСнаб.импортБанковскойВыпискиByn(excell)
    }
    /** импортировать ППВ из бух в упр 1с
     * документы разделяют между пользователями
     * один вводит ППВ при этом в выписке после импорта удаляет ППИ
     * другой наоборот
     * в обработке нужно проставить договор
    */
    protected импортироватьДокументыППВИзБухВУпр() {
        const документыБониксАвто = this.программа1сБухБониксАвто.процедураЭкспортаДанныхВыписки('ППВ')
        const документыСнаб = this.программа1сБухСнаб.процедураЭкспортаДанныхВыписки("ППВ")
        this.программа1сУпр.запуститьОбработкуИмпортаВыписки(документыБониксАвто)
        this.программа1сУпр.запуститьОбработкуИмпортаВыписки(документыСнаб)
        this.проверкаРазнесенияВзаиморасчетовПоДоговорамВ1сУпр()
        this.блокировкаКонтрагентов()
    }
    /** импортировать ППИ из бух в упр 1с
     * документы разделяют между пользователями
     * один вводит ППВ при этом в выписке после импорта удаляет ППИ
     * другой наоборот
     * в обработке нужно проставить договор
    */
    protected импортироватьДокументыППИИзБухВУпр() {
        const документыБониксАвто = this.программа1сБухБониксАвто.процедураЭкспортаДанныхВыписки('ППИ')
        const документыСнаб = this.программа1сБухСнаб.процедураЭкспортаДанныхВыписки("ППИ")
        this.программа1сУпр.запуститьОбработкуИмпортаВыписки(документыБониксАвто)
        this.программа1сУпр.запуститьОбработкуИмпортаВыписки(документыСнаб)
        this.проверкаРазнесенияВзаиморасчетовПоДоговорамВ1сУпр()
        this.блокировкаКонтрагентов()

    }
    /** проверка разнесения взаиморасчетов по договорам и накладным в 1с Упр
     * после импорта выписки обработкой
     * есть контрагенты которые требуют разнесения по накладным
     * что бы правильно отправлялась смс нужно правильно разнести задолженность по накладным
     */
    protected проверкаРазнесенияВзаиморасчетовПоДоговорамВ1сУпр() {
        this.разнесенияВзаиморасчетовПоДоговорамВ1сУпр()
    }
    /** разнесение взаиморасчетов по договорам и накладным в 1с Упр
     * после импорта выписки обработкой
     * есть контрагенты которые требуют разнесения по накладным
     * что бы правильно отправлялась смс нужно правильно разнести задолженность по накладным
     */
    protected разнесенияВзаиморасчетовПоДоговорамВ1сУпр() {
        this.программа1сУпр.изменитьДокументБанковскаяВыписка()
    }
    /** блокировка контрагентов
     * после разнесения выписки создается док блок контр в который попадают контр с просроченной задолженностью автоматич
     * есть блокировка по долгу а есть по статусу
     * у контрагента есть основной менеджер и торговый представитель
     * в накладной стоит срок оплаты отсчитывается отсрочка дн и после 3-х дней после блокируется
     * срок оплаты в накладной рассчитывается из карточки контрагента в реквизите глубина кредита
     * система отсчитывает от даты реализации календарные дни
     */
    protected блокировкаКонтрагентов() {
        //TODO проверить автоматически ли попадают
        this.программа1сУпр.создатьИПровестиДокументБлокировкаКонтрагентов()
        this.отправкаСмсЗаблокированнымКонтрагентам()
    }
    /** разблокировка контрагентов
     * комментарий из заявки переносится в разблокировку
     */
    protected разблокировкаКонтрагентов() {
        const заявкиНаРазблокировку = this.программа1сУпр.запуститьОбработкуРазблокировкиКонтрагентовСДЗ()
        this.программа1сУпр.создатьИпровестиДокументРазблокировкаКонтрагентов(заявкиНаРазблокировку)
    }
    /** провести валютные документы ППВ в бух
     * полученные путем просмотра журнала клиентБанка
     */
    protected отразитьВалютОперациюППВВДок1сБухИзКлиентБанка() {
        //TODO банки разные ?
        const документыППВ = this.клиентБанк.просмотрВалютныхППВ()
        this.программа1сБухСнаб.создатьИПровестиВалютноеПлатежноеПоручениеВходящее(документыППВ)
        this.программа1сБухБониксАвто.создатьИПровестиВалютноеПлатежноеПоручениеВходящее(документыППВ)
    }
    /** провести валютные документы ППИ в бух
     * полученные путем просмотра журнала клиентБанка
     */
    protected отразитьВалютОперациюППИВДок1сБухИзКлиентБанка() {
        //TODO банки разные тогда у юзеров использующих метод размножить ?
        const документыППИ = this.клиентБанк.просмотрВалютныхППИ()
        this.программа1сБухСнаб.создатьИПровестиВалютноеПлатежноеПоручениеИсходящее(документыППИ)
        this.программа1сБухБониксАвто.создатьИПровестиВалютноеПлатежноеПоручениеВходящее(документыППИ)
    }
    /** отражение операции покупка валюты Снаб
     * создание документа Конвертация валюты
     *при покупке валюты в банке разносится в документ конвертация валюты
     */
    protected отразитьОперациюКонвертациюВалютыСнаб() {
        const документКонвертацииВалюты = this.клиентБанк.просмотрЗаявокНаПокупкуВалюты()
        this.программа1сБухСнаб.создатьИПровестиКонвертацияВалюты(документКонвертацииВалюты)
    }
    /** отражение операции покупка валюты Боникс
     * создание документа Конвертация валюты
     *при покупке валюты в банке разносится в документ конвертация валюты
     */
    protected отразитьОперациюКонвертациюВалютыБоникс() {
        const документКонвертацииВалюты = this.клиентБанк.просмотрЗаявокНаПокупкуВалюты()
        this.программа1сБухБониксАвто.создатьИПровестиКонвертацияВалюты(документКонвертацииВалюты)
    }
    /** отражение операции командировки сторонних перевозчиков
     */
    protected отразитьОперациюКомандировкаСтороннихПеревозчиков() {
        this.googleMapService.расчитатьПротяженностьМаршрута()
        this.программа1сБухБониксАвто.создатьИпровестиДокументАктПолученныхУслуг
        this.программа1сУпр.создатьИпровестиДокументКомандировка()
        this.программа1сУпр.оформитьДокументПоступлениеЗатрат()
    }
    /** отражение операции командировки сторонних собственных водителей
     */
    protected отразитьОперациюКомандировкаСобственныхПеревозчиков() {
        this.программа1сУпр.создатьИпровестиДокументКомандировка()
    }
    /** отправка смс заблокированным контрагентам */
    protected отправкаСмсЗаблокированнымКонтрагентам() { }

    /** выставление долга контрагенту
     * 
     * после суда гос пошлина
     * сумма пени
     * проценты
     * основной долг
     */
    protected выставлениеДолгаКонтрагенту() {
        this.программа1сУпр.создатьИПровестиДокументРаботаСДолгами()
    }
    /** отчет по выставленным долгам контрагентов
     * в отчете долги в работе приход расход остаток по долгам
     */
    protected анализДолгаКонтрагентов() {
        this.программа1сУпр.сформироватьОтчетДолгиВРаботе()
    }
    /** передача оборудования во временное пользование
     * покупаем стенды
     * и передаем по договору безвозмездного пользования
     * для того что бы торговый отдел знал что у них есть
     */
    protected передачаОборудованияВоВременноеПользование() {
        this.программа1сУпр.создатьИпровестиДокументДоговорКонтрагентаПоОборудованию()
    }

    /** оформление Заявки На Расходование Денежных Средств
     * акты перевозок
     * оплата налогов
     *  по сроку договора разнести заявки
     * учитывая нашу отсрочку платежа
     */
    protected оформлениеЗаявокНаРасходованиеДСПоВыставленнымАктам() {
        this.программа1сУпр.создатьИпровестиДокументЗаявкаНаРасходованиеДенежныхСредств()
    }
    /** согласование Заявок НаРасходование ДенежныхСредств
     * прикрепляются копии документов которые идут на оплату
     * если дату не утверждает то дату в заявке переносится на согласованную с владимиром     * 
     */
    protected согласованиеЗаявокНаРасходованиеДенежныхСредств() {
        const печатнаяФормаВВидеПлатежногоКалендаряСЗаявками = this.программа1сУпр.вывестиИНформациюПоЗаявокНаРасходованиеДенежныхСредств()
        const согласованныеЗаявки = this.владимир.согласоватьПлатежныйКалендарь(печатнаяФормаВВидеПлатежногоКалендаряСЗаявками)
        this.программа1сУпр.изменитьЗаявкуНаРасходованиеДенежныхСредств('новая дата')
        this.оформитьПлатежиВКлиентБанк(согласованныеЗаявки)
    }
    /** оформить платежи в клиент банк
     * после исполнения оплаты по заявке бухгалтер изменяет ее статус с новой на оплачено
     */
    protected оформитьПлатежиВКлиентБанк(заявки: any) {
        this.клиентБанк.оформитьППИ(заявки)
        this.программа1сУпр.изменитьЗаявкуНаРасходованиеДенежныхСредств('оплачено')
    }
    /** оформить операцию оказанных услуг сторонних контрагентов */
    protected оформитьОперациюОказанныхУслугСтороннихКонтрагентов() {
        this.программа1сБухБониксАвто.создатьИпровестиДокументАктПолученныхУслуг()
    }
    /** импортировать операции оказанных услуг из бух в упр */
    protected импортОперацийОказанныхУслугИзБухВУпр() {

    }
    /** поиск Заказа Поставщику для оформления поступления */
    protected поискЗаказаПоставщикуДляОформленияПоступления() {
        return this.программа1сУпр.поискЗаказаПоставщику()
    }
    /** оформление поступления товаров
     * Мне передают документы (копии) смотрю по сумме инвойса и спецификации и я знаю какой конкретно заказ
     * На основании заказа поставщику я делаю поступление
     */
    protected оформитьПоступлениеТоваров() {
        this.поискЗаказаПоставщикуДляОформленияПоступления().ввестиНаОсновании('ПоступлениеТоваров')
    }
    /** оформлениеДопРасходовПоИмпортуТоваров */
    protected оформлениеДопРасходовПоИмпортуТоваров() {
        this.программа1сУпр.оформлениеДопРасходовПоИмпортуТоваров()
    }
    /** перемещение товара
     * торговые и бренды приходят и говорят что нужно сделать перемещение(пополнить витрину)
     * с основного склада на офис
     */
    protected оформитьПеремещениеТовара() {
        this.программа1сУпр.оформитьПеремещениеТоваров()
    }
}
